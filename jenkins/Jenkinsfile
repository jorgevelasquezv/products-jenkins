pipeline {
    agent any

    environment {
        GRADLE_OPTS = '-Dorg.gradle.daemon=false'
        DB_USERNAME = 'user_products'
        DB_PORT = '5433'
        DB_NAME = 'products'
        DB_HOST = 'localhost'
        DB_PASSWORD = 'Cl4v3_S3cret4'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Grant execute permission for gradlew') {
            steps {
                dir('ms_products') {
                    sh 'chmod +x gradlew'
                }
            }
        }

        stage('Runing Test And Generate Coverage Report') {
            steps {
                dir('ms_products') {
                    sh '''
                        export DB_USERNAME=${DB_USERNAME}
                        export DB_PORT=${DB_PORT}
                        export DB_NAME=${DB_NAME}
                        export DB_HOST=${DB_HOST}
                        export DB_PASSWORD=${DB_PASSWORD}
                        ./gradlew jacocoTestReport
                    '''
                }
            }
        }

        stage('Check Coverage') {
            steps {
                jacoco execPattern: 'ms_products/build/jacoco/test.exec', classPattern: 'ms_products/build/classes/java/main', sourcePattern: 'ms_products/src/main/java', exclusionPattern: '**/Test*'
            }
        }

        stage('Publish Coverage Report') {
            steps {
                archiveArtifacts artifacts: 'ms_products/build/reports/jacoco/test/html/**', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            script {
                def jacocoResults = jacoco(
                    execPattern: 'ms_products/build/jacoco/test.exec',
                    classPattern: 'ms_products/build/classes/java/main',
                    sourcePattern: 'ms_products/src/main/java',
                    exclusionPattern: '**/Test*'
                )
                def lineCoverage = jacocoResults.lineCoverage
                echo "Line Coverage: ${lineCoverage}%"
                if (lineCoverage < 80) {
                    error "Coverage is below 80%: ${lineCoverage}%"
                }
            }
        }
    }
}